(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{207:function(n,e,t){"use strict";t.r(e);var s=t(0),l=Object(s.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("创建文件.vimrc并将文件保存到~/ 目录下")]),this._v(" "),e("p",[this._v("代码如下\n")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n" 显示相关  \n\n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"set shortmess=atI   " 启动的时候不显示那个援助乌干达儿童的提示  \n\n"winpos 5 5          " 设定窗口位置  \n\n"set lines=40 columns=155    " 设定窗口大小  \n\n"set nu              " 显示行号  \n\nset go=             " 不要图形按钮  \n\n"color asmanian2     " 设置背景主题  \n\nset guifont=Courier_New:h10:cANSI   " 设置字体  \n\nsyntax on           " 语法高亮  \n\nautocmd InsertLeave * se nocul  " 用浅色高亮当前行  \n\nautocmd InsertEnter * se cul    " 用浅色高亮当前行  \n\n"set ruler           " 显示标尺  \n\nset showcmd         " 输入的命令显示出来，看的清楚些  \n\n"set cmdheight=1     " 命令行（在状态行下）的高度，设置为1  \n\n"set whichwrap+=<,>,h,l   " 允许backspace和光标键跨越行边界(不建议)  \n\n"set scrolloff=3     " 光标移动到buffer的顶部和底部时保持3行距离  \n\nset novisualbell    " 不要闪烁(不明白)  \n\nset statusline=%F%m%r%h%w\\ [FORMAT=%{&ff}]\\ [TYPE=%Y]\\ [POS=%l,%v][%p%%]\\ %{strftime(\\"%d/%m/%y\\ -\\ %H:%M\\")}   "状态行显示的内容  \n\nset laststatus=1    " 启动显示状态行(1),总是显示状态行(2)  \n\nset foldenable      " 允许折叠  \n\nset foldmethod=manual   " 手动折叠  \n\n"set background=dark "背景使用黑色 \n\nset nocompatible  "去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限  \n\n" 显示中文帮助\n\nif version >= 603\n\n    set helplang=cn\n\n    set encoding=utf-8\n\nendif\n\n" 设置配色方案\n\n"colorscheme murphy\n\n"字体 \n\n"if (has("gui_running")) \n\n"   set guifont=Bitstream\\ Vera\\ Sans\\ Mono\\ 10 \n\n"endif \n\n\n \nset fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936\n\nset termencoding=utf-8\n\nset encoding=utf-8\n\nset fileencodings=ucs-bom,utf-8,cp936\n\nset fileencoding=utf-8\n\n\n\n"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"""""新文件标题""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"新建.c,.h,.sh,.java文件，自动插入文件头 \n\nautocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call SetTitle()" \n\n""定义函数SetTitle，自动插入文件头 \n\nfunc SetTitle() \n\n    "如果文件类型为.sh文件 \n\n    if &filetype == \'sh\' \n\n        call setline(1,"\\#########################################################################") \n\n        call append(line("."), "\\# File Name: ".expand("%")) \n\n        call append(line(".")+1, "\\# Author: ma6174") \n\n        call append(line(".")+2, "\\# mail: ma6174@163.com") \n\n        call append(line(".")+3, "\\# Created Time: ".strftime("%c")) \n\n        call append(line(".")+4, "\\#########################################################################") \n\n        call append(line(".")+5, "\\#!/bin/bash") \n\n        call append(line(".")+6, "") \n\n    else \n\n        call setline(1, "/*************************************************************************") \n\n        call append(line("."), "    > File Name: ".expand("%")) \n\n        call append(line(".")+1, "    > Author: ma6174") \n\n        call append(line(".")+2, "    > Mail: ma6174@163.com ") \n\n        call append(line(".")+3, "    > Created Time: ".strftime("%c")) \n\n        call append(line(".")+4, " ************************************************************************/") \n\n        call append(line(".")+5, "")\n\n    endif\n\n    if &filetype == \'cpp\'\n\n        call append(line(".")+6, "#include<iostream>")\n\n        call append(line(".")+7, "using namespace std;")\n\n        call append(line(".")+8, "")\n\n    endif\n\n    if &filetype == \'c\'\n\n        call append(line(".")+6, "#include<stdio.h>")\n\n        call append(line(".")+7, "")\n\n    endif\n\n    "新建文件后，自动定位到文件末尾\n\n    autocmd BufNewFile * normal G\n\nendfunc \n\n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"键盘命令\n\n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n\n\nnmap <leader>w :w!<cr>\n\nnmap <leader>f :find<cr>\n\n\n\n" 映射全选+复制 ctrl+a\n\nmap <C-A> ggVGY\n\nmap! <C-A> <Esc>ggVGY\n\nmap <F12> gg=G\n\n" 选中状态下 Ctrl+c 复制\n\nvmap <C-c> "+y\n\n"去空行  \n\nnnoremap <F2> :g/^\\s*$/d<CR> \n\n"比较文件  \n\nnnoremap <C-F2> :vert diffsplit \n\n"新建标签  \n\nmap <M-F2> :tabnew<CR>  \n\n"列出当前目录文件  \n\nmap <F3> :tabnew .<CR>  \n\n"打开树状文件目录  \n\nmap <C-F3> \\be  \n\n"C，C++ 按F5编译运行\n\nmap <F5> :call CompileRunGcc()<CR>\n\nfunc! CompileRunGcc()\n\n    exec "w"\n\n    if &filetype == \'c\'\n\n        exec "!g++ % -o %<"\n\n        exec "! ./%<"\n\n    elseif &filetype == \'cpp\'\n\n        exec "!g++ % -o %<"\n\n        exec "! ./%<"\n\n    elseif &filetype == \'java\' \n\n        exec "!javac %" \n\n        exec "!java %<"\n\n    elseif &filetype == \'sh\'\n\n        :!./%\n\n    endif\n\nendfunc\n\n"C,C++的调试\n\nmap <F8> :call Rungdb()<CR>\n\nfunc! Rungdb()\n\n    exec "w"\n\n    exec "!g++ % -g -o %<"\n\n    exec "!gdb ./%<"\n\nendfunc\n\n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n""实用设置\n\n"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n" 设置当文件被改动时自动载入\n\nset autoread\n\n" quickfix模式\n\nautocmd FileType c,cpp map <buffer> <leader><space> :w<cr>:make<cr>\n\n"代码补全 \n\nset completeopt=preview,menu \n\n"允许插件  \n\nfiletype plugin on\n\n"共享剪贴板  \n\nset clipboard+=unnamed \n\n"从不备份  \n\nset nobackup\n\n"make 运行\n\n:set makeprg=g++\\ -Wall\\ \\ %\n\n"自动保存\n\nset autowrite\n\nset ruler                   " 打开状态栏标尺\n\nset cursorline              " 突出显示当前行\n\nset magic                   " 设置魔术\n\nset guioptions-=T           " 隐藏工具栏\n\nset guioptions-=m           " 隐藏菜单栏\n\n"set statusline=\\ %<%F[%1*%M%*%n%R%H]%=\\ %y\\ %0(%{&fileformat}\\ %{&encoding}\\ %c:%l/%L%)\\\n\n" 设置在状态行显示的信息\n\nset foldcolumn=0\n\nset foldmethod=indent \n\nset foldlevel=3 \n\nset foldenable              " 开始折叠\n\n" 不要使用vi的键盘模式，而是vim自己的\n\nset nocompatible\n\n" 语法高亮\n\nset syntax=on\n\n" 去掉输入错误的提示声音\n\nset noeb\n\n" 在处理未保存或只读文件的时候，弹出确认\n\nset confirm\n\n" 自动缩进\n\nset autoindent\n\nset cindent\n\n" Tab键的宽度\n\nset tabstop=4\n\n" 统一缩进为4\n\nset softtabstop=4\n\nset shiftwidth=4\n\n" 不要用空格代替制表符\n\nset noexpandtab\n\n" 在行和段开始处使用制表符\n\nset smarttab\n\n" 显示行号\n\nset number\n\n" 历史记录数\n\nset history=1000\n\n"禁止生成临时文件\n\nset nobackup\n\nset noswapfile\n\n"搜索忽略大小写\n\nset ignorecase\n\n"搜索逐字符高亮\n\nset hlsearch\n\nset incsearch\n\n"行内替换\n\nset gdefault\n\n"编码设置\n\nset enc=utf-8\n\nset fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936\n\n"语言设置\n\nset langmenu=zh_CN.UTF-8\n\nset helplang=cn\n\n" 我的状态行显示的内容（包括文件类型和解码）\n\n"set statusline=%F%m%r%h%w\\ [FORMAT=%{&ff}]\\ [TYPE=%Y]\\ [POS=%l,%v][%p%%]\\ %{strftime(\\"%d/%m/%y\\ -\\ %H:%M\\")}\n\n"set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]\n\n" 总是显示状态行\n\nset laststatus=2\n\n" 命令行（在状态行下）的高度，默认为1，这里是2\n\nset cmdheight=2\n\n" 侦测文件类型\n\nfiletype on\n\n" 载入文件类型插件\n\nfiletype plugin on\n\n" 为特定文件类型载入相关缩进文件\n\nfiletype indent on\n\n" 保存全局变量\n\nset viminfo+=!\n\n" 带有如下符号的单词不要被换行分割\n\nset iskeyword+=_,$,@,%,#,-\n\n" 字符间插入的像素行数目\n\nset linespace=0\n\n" 增强模式中的命令行自动完成操作\n\nset wildmenu\n\n" 使回格键（backspace）正常处理indent, eol, start等\n\nset backspace=2\n\n" 允许backspace和光标键跨越行边界\n\nset whichwrap+=<,>,h,l\n\n" 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）\n\nset mouse=a\n\nset selection=exclusive\n\nset selectmode=mouse,key\n\n" 通过使用: commands命令，告诉我们文件的哪一行被改变过\n\nset report=0\n\n" 在被分割的窗口间显示空白，便于阅读\n\nset fillchars=vert:\\ ,stl:\\ ,stlnc:\\\n\n" 高亮显示匹配的括号\n\nset showmatch\n\n" 匹配括号高亮的时间（单位是十分之一秒）\n\nset matchtime=1\n\n" 光标移动到buffer的顶部和底部时保持3行距离\n\nset scrolloff=3\n\n" 为C程序提供自动缩进\n\nset smartindent\n\n" 高亮显示普通txt文件（需要txt.vim脚本）\n\nau BufRead,BufNewFile *  setfiletype txt\n\n"自动补全\n\n:inoremap ( ()<ESC>i\n\n:inoremap ) <c-r>=ClosePair(\')\')<CR>\n\n:inoremap { {<CR>}<ESC>O\n\n:inoremap } <c-r>=ClosePair(\'}\')<CR>\n\n:inoremap [ []<ESC>i\n\n:inoremap ] <c-r>=ClosePair(\']\')<CR>\n\n:inoremap " ""<ESC>i\n\n:inoremap \' \'\'<ESC>i\n\nfunction! ClosePair(char)\n\n    if getline(\'.\')[col(\'.\') - 1] == a:char\n\n        return "\\<Right>"\n\n    else\n\n        return a:char\n\n    endif\n\nendfunction\n\nfiletype plugin indent on \n\n"打开文件类型检测, 加了这句才可以用智能补全\n\nset completeopt=longest,menu\n\n"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n" CTags的设定  \n\n"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\nlet Tlist_Sort_Type = "name"    " 按照名称排序  \n\nlet Tlist_Use_Right_Window = 1  " 在右侧显示窗口  \n\nlet Tlist_Compart_Format = 1    " 压缩方式  \n\nlet Tlist_Exist_OnlyWindow = 1  " 如果只有一个buffer，kill窗口也kill掉buffer  \n\nlet Tlist_File_Fold_Auto_Close = 0  " 不要关闭其他文件的tags  \n\nlet Tlist_Enable_Fold_Column = 0    " 不要显示折叠树  \n\nautocmd FileType java set tags+=D:\\tools\\java\\tags  \n\n"autocmd FileType h,cpp,cc,c set tags+=D:\\tools\\cpp\\tags  \n\n"let Tlist_Show_One_File=1            "不同时显示多个文件的tag，只显示当前文件的\n\n"设置tags  \n\nset tags=tags  \n\n"set autochdir \n\n\n\n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"其他东东\n\n"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""\n\n"默认打开Taglist \n\nlet Tlist_Auto_Open=1 \n\n"""""""""""""""""""""""""""""" \n\n" Tag list (ctags) \n\n"""""""""""""""""""""""""""""""" \n\nlet Tlist_Ctags_Cmd = \'/usr/bin/ctags\' \n\nlet Tlist_Show_One_File = 1 "不同时显示多个文件的tag，只显示当前文件的 \n\nlet Tlist_Exit_OnlyWindow = 1 "如果taglist窗口是最后一个窗口，则退出vim \n\nlet Tlist_Use_Right_Window = 1 "在右侧窗口中显示taglist窗口\n\n" minibufexpl插件的一般设置\n\nlet g:miniBufExplMapWindowNavVim = 1\n\nlet g:miniBufExplMapWindowNavArrows = 1\n\nlet g:miniBufExplMapCTabSwitchBufs = 1\nlet g:miniBufExplModSelTarget = 1\n\n')])])])])}),[],!1,null,null,null);e.default=l.exports}}]);